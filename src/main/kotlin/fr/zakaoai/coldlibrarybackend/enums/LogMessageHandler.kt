package fr.zakaoai.coldlibrarybackend.enums

enum class LogMessageHandler(val message: String) {
    ANIME_EPISODE_FIND_BY_MAL_ID("AnimeEpisodeHandler:findByMalId - Lecture des épisodes de l'anime %s"),
    ANIME_EPISODE_FIND_BY_MAL_ID_AND_EPISODE_NUMBER("AnimeEpisodeHandler:findByMalIdAndEpisodeNumber - Lecture des informations pour l'anime %s épisode %s"),
    ANIME_EPISODE_DELETE_BY_MAL_ID("AnimeEpisodeHandler:deleteByMalId - Suppression des épisodes de l'anime %s"),
    ANIME_EPISODE_DELETE_BY_MAL_ID_AND_EPISODE_NUMBER("AnimeEpisodeHandler:deleteByMalIdAndEpisodeNumber - Suppression de l'anime %s épisode %s"),
    ANIME_EPISODE_TORRENT_FIND_BY_MAL_ID("AnimeEpisodeTorrentHandler:findByMalId - Recherche des torrent pour l'anime %s"),
    ANIME_EPISODE_TORRENT_FIND_ALL_DOWNLOADING("AnimeEpisodeTorrentHandler:findAllDownloading - Lecture de tout les épisodes des animes en cours de téléchargement"),
    ANIME_EPISODE_TORRENT_SEARCH_ALTERNATE("AnimeEpisodeTorrentHandler:searchAlternate - Recherche de torrent alternatif pour l'anime %s épisode %s"),
    ANIME_EPISODE_TORRENT_UPDATE("AnimeEpisodeTorrentHandler:update - Mise à jour du torrent pour l'anime %s épisode %s"),
    ANIME_EPISODE_TORRENT_REPLACE("AnimeEpisodeTorrentHandler:replace - Remplacement du torrent pour l'anime %s épisode %s"),
    ANIME_EPISODE_TORRENT_DELETE("AnimeEpisodeTorrentHandler:delete - Suppression du torrent pour l'anime %s épisode %s"),
    ANIME_EPISODE_TORRENT_SCAN_ALL("AnimeEpisodeTorrentHandler:scanAll - Recherche de tout les torrents pour l'anime %s"),
    ANIME_EPISODE_TORRENT_SCAN_PACKAGE("AnimeEpisodeTorrentHandler:scanPackage - Recherche du package pour l'anime %s"),
    ANIME_EPISODE_TORRENT_SCAN_NEXT("AnimeEpisodeTorrentHandler:scanNext - Recherche du prochain épisode pour l'anime %s"),
    ANIME_GET_ALL("AnimeHandler:getAllAnime - Lecture de tout les anime"),
    ANIME_FIND_BY_MAL_ID("AnimeHandler:findByMalId - Lecture des informations de l'anime %s"),
    ANIME_UPDATE_BY_MAL_ID("AnimeHandler:updateByMalId - Mise à jour des infmormations de l'anime %s"),
    ANIME_SAVE("AnimeHandler:saveAnime - Enregistrement de l'anime %s"),
    ANIME_DELETE("AnimeHandler:deleteAnime - Suppression de l'anime %s"),
    ANIME_SEARCH("AnimeHandler:searchAnime - Recherche d'anime avec le mot clé %s"),
    ANIME_UPDATE_STORAGE_STATE("AnimeHandler:updateStorageState - Mise à jour de l'état du storage pour l'anime %s"),
    ANIME_UPDATE_LAST_AVAIBLE_EPISODE("AnimeHandler:updateLastAvaibleEpisode - Mise à jour du dernier épisode disponible pour l'anime %s"),
    ANIME_UPDATE_IS_COMPLETE("AnimeHandler:updateIsComplete - Mise à jour de l'état complet pour l'anime %s"),
    ANIME_UPDATE_IS_DOWNLOADING("AnimeHandler:updateIsDownloading - Mise à jour de l'état en téléchargement pour l'anime %s"),
    ANIME_SEARCH_BY_SEASON("AnimeHandler:searchAnimeBySeason - Lecture des anime par saison pour l'année %s saison %s page %s"),
    ANIME_GET_SEASONS("AnimeHandler:getSeasons - Lecture de la liste de saisons disponible"),
    ANIME_TORRENT_GET_BY_MAL_ID("AnimeTorrentHandler:getTrackedAnime - Lecture des information de torrent pour l'anime %s"),
    ANIME_TORRENT_GET_ALL("AnimeTorrentHandler:getAllTrackedAnime - Lecture des informations de torrent de tout les animes en cours de téléchargement"),
    ANIME_TORRENT_UPDATE_BY_MAL_ID("AnimeTorrentHandler:updateTrackedAnime - Mise à jour des informations de torrent pour l'anime %s"),
    ANIME_TORRENT_DELETE_BY_MAL_ID("AnimeTorrentHandler:deleteTrackedAnime - Supression des informations de torrent pour l'anime %s"),
    ANIME_TORRENT_CREATE_BY_MAL_ID("AnimeTorrentHandler:createTrackedAnime - Création des informations d'un anime torrent pour l'anime %s"),
    CACHE_CLEAR_ALL("CacheHandler:clearAllCaches - Supression de tout les cache"),
    DELUGE_TORRENT_DOWNLOAD("DelugeTorrentHandler:downloadTorrent - Lancement du téléchargement pour l'anime %s épisode %s"),
    DELUGE_TORRENT_UPDATE("DelugeTorrentHandler:updateTorrent - Mise à jour des informations du torrent pour l'anime %s épisode %s "),
    DELUGE_TORRENT_UPDATE_ALL("DelugeTorrentHandler:updateAllTorrent - Mise à jour de l'état de tout les torrents"),
    LOG_GET_ALL_LOGS("LogHandler:getAllLogs - Lecture des logs"),
    LOG_GET_USER_LOGS("LogHandler:getLogOfUser - Lecture des logs de l'utilisateur %s"),
    MY_ANIME_LIST("MyAnimeListHandler:getUserAnimeList - Lecture de l'anime liste de l'utilisateur connecté"),
    REQUEST_CREATE("RequestHandler:createRequest - Création d'une request pour l'anime %s de type %s"),
    REQUEST_GET_MY("RequestHandler:getMyRequest - Lecture des requetes créer par l'utilisateur"),
    REQUEST_GET_MY_ASSIGNED("RequestHandler:getMyAssignedRequest - Lecture des requêtes assigné à l'utlisateur"),
    REQUEST_GET_ALL("RequestHandler:getAllRequest - Lecture de toute les requests"),
    REQUEST_UPDATE("RequestHandler:updateRequest - Mise à jour de la request %s"),
    USER_CURRENT("UserHandler:getCurrentUser - Lecture des informations courante de l'utlilisateur"),
    USER_UPDATE_CURRENT_MAL_USERNAME("UserHandler:updateCurrentUserMalUsername - Mise à jour du nom d'utilisateur MyAnimeList pour l'utilisateur courrant"),
    USER_GET_ALL("UserHandler:getAllUser - Lecture de tout les utilisateurs"),
}